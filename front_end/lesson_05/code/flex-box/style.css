.container {
  /* свойство указывается у родительского контейнера 
  - делает контенер гибким */
  display: flex;
  gap: 10px;
/* 
  justify-content - выравнивание по главной оси
    - space-between - когда все место между элементами (по краям нет)
    - space-around - еще добавит растояния от элементов до краев
    - space-evenly - растояние от краев и между элементами равны
    - center 
    - flex-start - от начала главной оси
    - flex-end - элементы расположены в конце главной оси
      (не обязатльной справа)
 */
  justify-content: space-around;
  /* 
  flex-wrap - если элементы не помещаются на строке
    он переносит на следующую
  */
  flex-wrap: wrap;
  /* 
  flex-direction - определяет положение главной оси
    - row - в строку слево направо
    - column - сверху вниз
    - row-reverse - справа налево
    - column-reverse
  */
  flex-direction: row-reverse;
}

.short {
  width: 200px;
  height: 300px;
}

.tall {
  width: 200px;
  height: 250px;
}

.card {
  background-color: lightpink;
}
/* пример 2 */
.container-2 {
  /* мы задали высоту только для демонстративных целей */
  height: 800px; 
  background-color: lightgrey;
  display: flex;
  gap: 24px;
  justify-content: flex-end;
  /* выравниваение элементов по поперечной оси cross-axis */
  align-items:center;
  flex-wrap: wrap;

  /* как расположатся все элементы внытри контейнера
  - группа элементов сместится в указанную сторону */
  align-content: flex-end;
}

.container-3 {
  display: flex;
  gap: 20px;
  justify-content: space-around;
}

.container-4 {
  background-color: gray;
  display: flex;
  flex-direction: column;
}